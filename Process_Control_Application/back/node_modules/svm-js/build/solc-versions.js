"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolcVersions = void 0;
const fetch_paginate_1 = require("fetch-paginate");
const _1 = require(".");
const fs = __importStar(require("fs"));
const path_1 = require("path");
const os = __importStar(require("os"));
class SolcVersions {
    constructor(baseDirectory = path_1.join(os.homedir(), '.svm')) {
        this.baseDirectory = path_1.normalize(baseDirectory);
        this.versionsDirectory = path_1.join(baseDirectory, 'versions');
        if (!fs.existsSync(this.versionsDirectory)) {
            fs.mkdirSync(this.versionsDirectory, { recursive: true });
        }
    }
    getRemoteVersions() {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield fetch_paginate_1.fetchPaginate('https://api.github.com/repos/ethereum/solidity/releases?per_page=100');
            let githubSolidityReleases = response.items.map(element => new _1.Solc(element, this.versionsDirectory));
            if (os.type() === 'Darwin') {
                const macResponse = yield fetch_paginate_1.fetchPaginate('https://api.github.com/repos/web3j/solidity-darwin-binaries/releases?per_page=100');
                const macReleases = macResponse.items.map(element => new _1.Solc(element, this.versionsDirectory));
                githubSolidityReleases = githubSolidityReleases.map(i => {
                    const relevant = macReleases.find(j => j.releaseMeta.tag_name === i.releaseMeta.tag_name);
                    if (relevant) {
                        i.releaseMeta.assets = [...i.releaseMeta.assets, ...relevant.releaseMeta.assets];
                    }
                    return i;
                });
            }
            return githubSolidityReleases;
        });
    }
    solcFromVersion(version) {
        return new _1.Solc(JSON.parse(fs.readFileSync(path_1.join(this.versionsDirectory, version, 'meta.json'), 'utf8')), this.versionsDirectory);
    }
    getLocalVersions() {
        return fs.readdirSync(this.versionsDirectory).map(i => this.solcFromVersion(i));
    }
}
exports.SolcVersions = SolcVersions;
